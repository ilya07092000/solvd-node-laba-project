on:
  pull_request:
    branches:
      - main

jobs:
  build:
    # Container must run in Linux-based operating systems
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        # Set health checks to wait until redis has started
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install deps
        run: |
          npm ci
      - run: yarn db
      - run: npm run test-coverage
        env:
          PORT: 3000
          ACCESS_TOKEN_EXPIRATION_MINUTES: 15
          REFRESH_TOKEN_EXPIRATION_MINUTES: 1440
          LOGIN: login
          PASSWORD: '$2b$10$dhyXNSam3m45sDqRdJtFYelz6iuhYRqf3piuBCwf7xTThUVWuBzXu'
          SALT_ROUNDS: 10
          REDIS_HOST: redis
          REDIS_PORT: 6379
          API: /api/v1
          DB_USER: postgres
          DB_PORT: 5432
          DB_DATABASE: postgres
          DB_PASSWORD: pass
          DB_HOST: db

      - uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          skip-step: all
          coverage-file: ./coverage/coverage-summary.json
